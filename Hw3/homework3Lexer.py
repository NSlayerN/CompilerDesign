# Generated from C:/Users/persianNB/Desktop/CompilerDesign/Hw3/homework3.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,8,135,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,0,5,0,31,8,0,10,0,12,0,34,9,0,1,0,1,0,1,0,1,0,4,0,40,8,0,11,
        0,12,0,41,1,1,4,1,45,8,1,11,1,12,1,46,1,2,4,2,50,8,2,11,2,12,2,51,
        1,3,4,3,55,8,3,11,3,12,3,56,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,5,5,5,72,8,5,10,5,12,5,75,9,5,1,5,1,5,4,5,79,8,5,11,
        5,12,5,80,1,6,4,6,84,8,6,11,6,12,6,85,1,6,1,6,4,6,90,8,6,11,6,12,
        6,91,1,6,1,6,4,6,96,8,6,11,6,12,6,97,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
        1,7,1,7,1,7,3,7,110,8,7,1,8,4,8,113,8,8,11,8,12,8,114,1,9,4,9,118,
        8,9,11,9,12,9,119,1,10,4,10,123,8,10,11,10,12,10,124,1,11,1,11,1,
        12,4,12,130,8,12,11,12,12,12,131,1,12,1,12,0,0,13,1,1,3,0,5,0,7,
        2,9,3,11,4,13,5,15,6,17,0,19,0,21,0,23,7,25,8,1,0,4,3,0,48,57,65,
        90,97,122,4,0,45,45,48,57,65,90,97,122,1,0,48,57,3,0,9,10,13,13,
        32,32,144,0,1,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,1,27,1,0,0,0,3,44,
        1,0,0,0,5,49,1,0,0,0,7,54,1,0,0,0,9,58,1,0,0,0,11,73,1,0,0,0,13,
        83,1,0,0,0,15,99,1,0,0,0,17,112,1,0,0,0,19,117,1,0,0,0,21,122,1,
        0,0,0,23,126,1,0,0,0,25,129,1,0,0,0,27,32,3,3,1,0,28,29,5,46,0,0,
        29,31,3,3,1,0,30,28,1,0,0,0,31,34,1,0,0,0,32,30,1,0,0,0,32,33,1,
        0,0,0,33,35,1,0,0,0,34,32,1,0,0,0,35,36,5,64,0,0,36,39,3,5,2,0,37,
        38,5,46,0,0,38,40,3,5,2,0,39,37,1,0,0,0,40,41,1,0,0,0,41,39,1,0,
        0,0,41,42,1,0,0,0,42,2,1,0,0,0,43,45,7,0,0,0,44,43,1,0,0,0,45,46,
        1,0,0,0,46,44,1,0,0,0,46,47,1,0,0,0,47,4,1,0,0,0,48,50,7,1,0,0,49,
        48,1,0,0,0,50,51,1,0,0,0,51,49,1,0,0,0,51,52,1,0,0,0,52,6,1,0,0,
        0,53,55,3,23,11,0,54,53,1,0,0,0,55,56,1,0,0,0,56,54,1,0,0,0,56,57,
        1,0,0,0,57,8,1,0,0,0,58,59,3,23,11,0,59,60,3,23,11,0,60,61,3,23,
        11,0,61,62,3,23,11,0,62,63,3,23,11,0,63,64,5,45,0,0,64,65,3,23,11,
        0,65,66,3,23,11,0,66,67,3,23,11,0,67,68,3,23,11,0,68,69,3,23,11,
        0,69,10,1,0,0,0,70,72,3,23,11,0,71,70,1,0,0,0,72,75,1,0,0,0,73,71,
        1,0,0,0,73,74,1,0,0,0,74,76,1,0,0,0,75,73,1,0,0,0,76,78,5,46,0,0,
        77,79,3,23,11,0,78,77,1,0,0,0,79,80,1,0,0,0,80,78,1,0,0,0,80,81,
        1,0,0,0,81,12,1,0,0,0,82,84,3,23,11,0,83,82,1,0,0,0,84,85,1,0,0,
        0,85,83,1,0,0,0,85,86,1,0,0,0,86,87,1,0,0,0,87,89,5,46,0,0,88,90,
        3,23,11,0,89,88,1,0,0,0,90,91,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,
        0,92,93,1,0,0,0,93,95,5,46,0,0,94,96,3,23,11,0,95,94,1,0,0,0,96,
        97,1,0,0,0,97,95,1,0,0,0,97,98,1,0,0,0,98,14,1,0,0,0,99,100,3,17,
        8,0,100,101,5,58,0,0,101,102,5,47,0,0,102,103,5,47,0,0,103,104,1,
        0,0,0,104,105,3,19,9,0,105,106,5,46,0,0,106,109,3,19,9,0,107,108,
        5,58,0,0,108,110,3,21,10,0,109,107,1,0,0,0,109,110,1,0,0,0,110,16,
        1,0,0,0,111,113,7,0,0,0,112,111,1,0,0,0,113,114,1,0,0,0,114,112,
        1,0,0,0,114,115,1,0,0,0,115,18,1,0,0,0,116,118,7,0,0,0,117,116,1,
        0,0,0,118,119,1,0,0,0,119,117,1,0,0,0,119,120,1,0,0,0,120,20,1,0,
        0,0,121,123,7,2,0,0,122,121,1,0,0,0,123,124,1,0,0,0,124,122,1,0,
        0,0,124,125,1,0,0,0,125,22,1,0,0,0,126,127,7,2,0,0,127,24,1,0,0,
        0,128,130,7,3,0,0,129,128,1,0,0,0,130,131,1,0,0,0,131,129,1,0,0,
        0,131,132,1,0,0,0,132,133,1,0,0,0,133,134,6,12,0,0,134,26,1,0,0,
        0,16,0,32,41,46,51,56,73,80,85,91,97,109,114,119,124,131,1,6,0,0
    ]

class homework3Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    EMAIL = 1
    NATIONALNUMBER = 2
    POSTALCODE = 3
    FLOAT = 4
    VERSION = 5
    URLADDRESS = 6
    DIGIT = 7
    WS = 8

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "EMAIL", "NATIONALNUMBER", "POSTALCODE", "FLOAT", "VERSION", 
            "URLADDRESS", "DIGIT", "WS" ]

    ruleNames = [ "EMAIL", "USER", "DOMAIN", "NATIONALNUMBER", "POSTALCODE", 
                  "FLOAT", "VERSION", "URLADDRESS", "SCHEME", "HOST", "PORT", 
                  "DIGIT", "WS" ]

    grammarFileName = "homework3.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


